namespace rapp
{
namespace cloud
{
/*
template <class service_class, typename... Args>
void vision_batch::insert_service(Args... args)
{
    auto object = service_class(args...);
    if (object.is_single_callable()) {
        throw std::runtime_error("object is single callable");
    }
    services__[object.uri] = object;
    http_request::add_content(object.uri, object.make_parameters(), true);
}
*/

/*
template <typename... services>
vision_batch<services...>::vision_batch(
                                         rapp::object::picture image,
                                         services... arg
                                       )
*/

/*
template <typename... services>
std::string vision_batch<services...>::uri() const
{
    return make_http_uri("vision_batch");
}
*/

}
}
